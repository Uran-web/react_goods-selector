{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","goods","selectedGoods","addWord","word","setState","prevState","removeWord","splice","indexOf","resetList","message","this","length","className","type","onClick","map","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAmGaC,E,4MA3FbC,MAAQ,CACNC,MAAOH,EACPI,cAAe,CAAC,Q,EAGlBC,QAAU,SAACC,GACT,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BJ,cAAc,GAAD,mBAAMI,EAAUJ,eAAhB,CAA+BE,S,EAIhDG,WAAa,SAACH,GACZ,EAAKJ,MAAME,cAAcM,OACvB,EAAKR,MAAME,cAAcO,QAAQL,GAAO,GAG1C,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BJ,cAAeI,EAAUJ,mB,EAI7BQ,UAAY,WACV,EAAKL,SAAS,CAAEH,cAAe,M,4CAGjC,WAAU,IAAD,OACHS,EAAU,GAcd,OAZwC,IAApCC,KAAKZ,MAAME,cAAcW,SAC3BF,EAAU,qBAG4B,IAApCC,KAAKZ,MAAME,cAAcW,SAC3BF,EAAU,iBAGRC,KAAKZ,MAAME,cAAcW,OAAS,IACpCF,EAAU,kBAIV,sBAAKG,UAAU,MAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAIA,UAAU,iBAAd,UACGF,KAAKZ,MAAME,cAAcU,KAAKZ,MAAME,cAAcW,OAAS,GAC3D,IACAF,KAGH,wBACEI,KAAK,SACLD,UAAU,gBACVE,QAAS,WACP,EAAKN,aAJT,kBAWF,qBAAKI,UAAU,aAAf,SACGF,KAAKZ,MAAMC,MAAMgB,KAAI,SAAAb,GAAI,OAExB,sBAAKU,UAAW,EAAKd,MAAME,cAAcgB,SAASd,GAAQ,cAAgB,OAA1E,UACE,6BAAgBA,GAAPA,GACT,wBACEW,KAAK,SACLC,QAAS,WACP,EAAKb,QAAQC,IAHjB,iBASA,wBACEW,KAAK,SACLC,QAAS,WACP,EAAKT,WAAWH,IAHpB,mC,GA3EIe,IAAMC,WCjBxBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6f490c7a.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[];\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    goods: goodsFromServer,\n    selectedGoods: ['Jam'],\n  };\n\n  addWord = (word: string) => {\n    this.setState((prevState) => ({\n      selectedGoods: [...prevState.selectedGoods, word],\n    }));\n  };\n\n  removeWord = (word: string) => {\n    this.state.selectedGoods.splice(\n      this.state.selectedGoods.indexOf(word), 1,\n    );\n\n    this.setState((prevState) => ({\n      selectedGoods: prevState.selectedGoods,\n    }));\n  };\n\n  resetList = () => {\n    this.setState({ selectedGoods: [] });\n  };\n\n  render() {\n    let message = '';\n\n    if (this.state.selectedGoods.length === 0) {\n      message = 'No goods selected';\n    }\n\n    if (this.state.selectedGoods.length === 1) {\n      message = '- is selected';\n    }\n\n    if (this.state.selectedGoods.length > 1) {\n      message = '- are selected';\n    }\n\n    return (\n      <div className=\"App\">\n        <div className=\"title\">\n          <h1 className=\"title__article\">\n            {this.state.selectedGoods[this.state.selectedGoods.length - 1]}\n            {' '}\n            {message}\n          </h1>\n\n          <button\n            type=\"button\"\n            className=\"title__button\"\n            onClick={() => {\n              this.resetList();\n            }}\n          >\n            X\n          </button>\n        </div>\n\n        <div className=\"goods-list\">\n          {this.state.goods.map(word => (\n\n            <div className={this.state.selectedGoods.includes(word) ? 'active_item' : 'item'}>\n              <h2 key={word}>{word}</h2>\n              <button\n                type=\"button\"\n                onClick={() => {\n                  this.addWord(word);\n                }}\n              >\n                Add\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={() => {\n                  this.removeWord(word);\n                }}\n              >\n                Remove\n              </button>\n            </div>\n\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}